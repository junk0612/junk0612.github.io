import Head from 'next/head'
import Link from 'next/link'
import { SITENAME } from '../lib/constant'
import { Layout } from '../components/Layout'
import { ContentList } from '../components/ContentList'
import { ContentWithoutBody } from '../lib/content'
import { Entry } from '../lib/entry'
import ArticleRepository from '../lib/repositories/article'
import SlideRepository from '../lib/repositories/slide'
import { GetStaticProps } from 'next'
import { articlePath } from '../lib/path'

interface HomeProps {
  articles: ContentWithoutBody[]
  slides: Entry[]
}

export default function Home({ articles, slides }: HomeProps) {
  const articleEntries: Entry[] = articles.map((article) => ({
    title: article.title,
    published: article.published,
    path: articlePath({ slug: article.slug }),
  }))

  return (
    <>
      <Head>
        <title>{SITENAME}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="mb-8">
          <h2 className="text-2xl mb-4">Latest Articles</h2>
          <ContentList entries={articleEntries} />
          <div className="text-right mt-4">
            <Link href="/articles" className="text-blue-600 hover:underline">
              View all articles →
            </Link>
          </div>
        </div>

        <div className="mb-8">
          <h2 className="text-2xl mb-4">Latest Slides</h2>
          <ContentList entries={slides} />
          <div className="text-right mt-4">
            <Link href="/slides" className="text-blue-600 hover:underline">
              View all slides →
            </Link>
          </div>
        </div>
      </Layout>
    </>
  )
}

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const allArticles = await ArticleRepository.list()
  const allSlides = await SlideRepository.list()
  
  const articles = allArticles
    .sort((a, b) => new Date(b.published).getTime() - new Date(a.published).getTime())
    .slice(0, 5)
    
  const slides = allSlides
    .sort((a, b) => new Date(b.published).getTime() - new Date(a.published).getTime())
    .slice(0, 5)

  return {
    props: {
      articles,
      slides,
    },
  }
}
